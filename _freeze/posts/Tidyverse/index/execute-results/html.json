{
  "hash": "e781ec0400ce4eacc42344278b5e66a2",
  "result": {
    "markdown": "---\ntitle: \"8. Modo tidyverse\"\ndescription: \"Paquetes y filosofia tidyverse\"\nauthor: \"Gabriel Andrade Ponce\"\ndate: \"2022-11-28\"\n---\n\n\n# ¿Qué es?\n\n# Instalar paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"palmerpenguins\")\ninstall.packages(\"tidyverse\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.1.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.1.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.1.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.1.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'palmerpenguins' was built under R version 4.1.2\n```\n:::\n:::\n\n\n# Datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(package = 'palmerpenguins')\nhead(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 8\n  species island bill_length_mm bill_depth_mm flipper_length_~ body_mass_g sex  \n  <fct>   <fct>           <dbl>         <dbl>            <int>       <int> <fct>\n1 Adelie  Torge~           39.1          18.7              181        3750 male \n2 Adelie  Torge~           39.5          17.4              186        3800 fema~\n3 Adelie  Torge~           40.3          18                195        3250 fema~\n4 Adelie  Torge~           NA            NA                 NA          NA <NA> \n5 Adelie  Torge~           36.7          19.3              193        3450 fema~\n6 Adelie  Torge~           39.3          20.6              190        3650 male \n# ... with 1 more variable: year <int>\n```\n:::\n\n```{.r .cell-code}\ndf <- penguins\n```\n:::\n\n\n# Algunas funciones\n\n## Renombrar\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- rename(df,\n  peso= \"body_mass_g\",\n  largo_pico = \"bill_length_mm\",\n  prof_pico = \"bill_depth_mm\"\n)\nnames(df2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"species\"           \"island\"            \"largo_pico\"       \n[4] \"prof_pico\"         \"flipper_length_mm\" \"peso\"             \n[7] \"sex\"               \"year\"             \n```\n:::\n:::\n\n\n## Seleccionar y filtrar datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_fil1 <- filter(df2, peso> 4000)\ndf2[df2$peso > 4000,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 174 x 8\n   species island    largo_pico prof_pico flipper_length_mm  peso sex    year\n   <fct>   <fct>          <dbl>     <dbl>             <int> <int> <fct> <int>\n 1 <NA>    <NA>            NA        NA                  NA    NA <NA>     NA\n 2 Adelie  Torgersen       39.2      19.6               195  4675 male   2007\n 3 Adelie  Torgersen       42        20.2               190  4250 <NA>   2007\n 4 Adelie  Torgersen       34.6      21.1               198  4400 male   2007\n 5 Adelie  Torgersen       42.5      20.7               197  4500 male   2007\n 6 Adelie  Torgersen       46        21.5               194  4200 male   2007\n 7 Adelie  Dream           39.2      21.1               196  4150 male   2007\n 8 Adelie  Dream           39.8      19.1               184  4650 male   2007\n 9 Adelie  Dream           44.1      19.7               196  4400 male   2007\n10 Adelie  Dream           39.6      18.8               190  4600 male   2007\n# ... with 164 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmin(df_fil1$peso)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4050\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_fil2 <- filter(df2, peso>4000, \n                  sex != \"male\", \n                  largo_pico < 47, \n                  species %in% c(\"Gentoo\", \"Adelie\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2[df2$peso > 4000 & df2$species == c(\"Adelie\",\"Gentoo\"),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 x 8\n   species island    largo_pico prof_pico flipper_length_mm  peso sex     year\n   <fct>   <fct>          <dbl>     <dbl>             <int> <int> <fct>  <int>\n 1 Adelie  Torgersen       34.6      21.1               198  4400 male    2007\n 2 Adelie  Dream           39.2      18.6               190  4250 male    2009\n 3 Gentoo  Biscoe          50        16.3               230  5700 male    2007\n 4 Gentoo  Biscoe          50        15.2               218  5700 male    2007\n 5 Gentoo  Biscoe          46.5      13.5               210  4550 female  2007\n 6 Gentoo  Biscoe          46.7      15.3               219  5200 male    2007\n 7 Gentoo  Biscoe          46.8      15.4               215  5150 male    2007\n 8 Gentoo  Biscoe          49        16.1               216  5550 male    2007\n 9 Gentoo  Biscoe          48.4      14.6               213  5850 male    2007\n10 Gentoo  Biscoe          49.3      15.7               217  5850 male    2007\n# ... with 54 more rows\n```\n:::\n:::\n\n\n## Seleccionar columnas\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_sel <- dplyr::select(df_fil1, species, island)\n\ndplyr::select(df_fil1, -species, -island)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 172 x 6\n   largo_pico prof_pico flipper_length_mm  peso sex    year\n        <dbl>     <dbl>             <int> <int> <fct> <int>\n 1       39.2      19.6               195  4675 male   2007\n 2       42        20.2               190  4250 <NA>   2007\n 3       34.6      21.1               198  4400 male   2007\n 4       42.5      20.7               197  4500 male   2007\n 5       46        21.5               194  4200 male   2007\n 6       39.2      21.1               196  4150 male   2007\n 7       39.8      19.1               184  4650 male   2007\n 8       44.1      19.7               196  4400 male   2007\n 9       39.6      18.8               190  4600 male   2007\n10       42.3      21.2               191  4150 male   2007\n# ... with 162 more rows\n```\n:::\n:::\n\n\nincluso permite reordenar y renombrar\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::select(df_fil1, \n              isla=island, \n              aleta=flipper_length_mm, \n              species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 172 x 3\n   isla      aleta species\n   <fct>     <int> <fct>  \n 1 Torgersen   195 Adelie \n 2 Torgersen   190 Adelie \n 3 Torgersen   198 Adelie \n 4 Torgersen   197 Adelie \n 5 Torgersen   194 Adelie \n 6 Dream       196 Adelie \n 7 Dream       184 Adelie \n 8 Dream       196 Adelie \n 9 Dream       190 Adelie \n10 Dream       191 Adelie \n# ... with 162 more rows\n```\n:::\n:::\n\n\no seleccionar dependiendo de la clase\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::select(df, where(is.factor))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 x 3\n   species island    sex   \n   <fct>   <fct>     <fct> \n 1 Adelie  Torgersen male  \n 2 Adelie  Torgersen female\n 3 Adelie  Torgersen female\n 4 Adelie  Torgersen <NA>  \n 5 Adelie  Torgersen female\n 6 Adelie  Torgersen male  \n 7 Adelie  Torgersen female\n 8 Adelie  Torgersen male  \n 9 Adelie  Torgersen <NA>  \n10 Adelie  Torgersen <NA>  \n# ... with 334 more rows\n```\n:::\n:::\n\n\n## Nuevas columnas y operaciones\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_mut <- mutate(df_fil1, \n                 porportion= largo_pico/length(df_fil1$species))\n```\n:::\n\n\n## Conteos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount(df_mut, species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 2\n  species       n\n  <fct>     <int>\n1 Adelie       35\n2 Chinstrap    15\n3 Gentoo      122\n```\n:::\n\n```{.r .cell-code}\ncount(df_mut, porportion)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 102 x 2\n   porportion     n\n        <dbl> <int>\n 1      0.201     1\n 2      0.204     1\n 3      0.218     1\n 4      0.220     1\n 5      0.228     3\n 6      0.230     2\n 7      0.231     1\n 8      0.231     1\n 9      0.233     1\n10      0.234     1\n# ... with 92 more rows\n```\n:::\n:::\n\n\npero es más divertido agrupandola\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_group <- group_by(df_mut, island)\n\nresum <- summarise(df_group,\n                   total_peso= sum(peso),\n                   promedio_peso= mean(peso),\n                   sd_pespo= sd(peso))\n```\n:::\n\n\n## Uso de tuberías o pipes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_pipe <- df %>%\n  rename(peso= \"body_mass_g\",\n         largo_pico = \"bill_length_mm\",\n         prof_pico = \"bill_depth_mm\"\n  ) %>%\n  dplyr::select(-island) %>% \n  filter(peso>4000) %>%\n  mutate(relacion= largo_pico/prof_pico)\n```\n:::\n\n\n## Especificando ggplot\n\nGrámatica para hacer gráficos. La filosifía de ggplot va en capas\n\n1\\. Capa es para los datos y la estética de los datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= df2, \n       aes(x=largo_pico, y=peso))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nAhora la geometría de los datos que queremos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= df2, \n       aes(x=largo_pico, y=peso))+\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nla geometria puede tener estéticas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= df2, \n       aes(x=largo_pico, y=peso))+\n  geom_point(aes(color=species, shape= species))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nPodemos tener varias geometrías\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= df2, \n       aes(x=largo_pico, y=peso))+\n  geom_point(aes(color=species, shape= species))+\n  geom_smooth(aes(color= species),method = \"lm\", se= T)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= df2, \n       aes(x=largo_pico, y=peso))+\n  geom_smooth(method = \"lm\", se= T)+\n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nHay varios temas por defecto en ggplot que controlan las carácteristicas del gráfico\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data= df2, \n       aes(x=largo_pico, y=peso))+\n  geom_point(aes(color=species, shape= species))+\n  geom_smooth(aes(color= species),method = \"lm\", se= T)+\n  theme_void()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nprobemos a hacer histogramas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df2, aes(x=flipper_length_mm))+\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nhistograma por especie\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df2, aes(x=flipper_length_mm))+\n  geom_histogram(aes(fill= species), alpha= 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\nPodemos controlar los colores\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df2, aes(x=flipper_length_mm))+\n  geom_histogram(aes(fill= species), alpha= 0.5)+\n  scale_fill_manual(values = c(\"#812C30\",\"purple\",\"black\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nCambiar el tema\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df2, aes(x=flipper_length_mm))+\n  geom_histogram(aes(fill= species), alpha= 0.5)+\n  scale_fill_manual(values = c(\"darkorange\",\"purple\",\"cyan4\"))+\n  theme_gray()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nCambiar la leyenda\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df2, aes(x=flipper_length_mm))+\n  geom_histogram(aes(fill= species), alpha= 0.5)+\n  scale_fill_manual(name=\" Especies\", values = c(\"darkorange\",\"purple\",\"cyan4\"))+\n  theme_minimal()+\n  labs(x= \"Largo de la aleta (mm)\",\n       y= \" Frecuencia\",\n       title = \" Histograma de aletas\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\nPor últim también podemos hacer marcos del mismo gráfico agrupado por determinada variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = df2, aes(x=flipper_length_mm))+\n  geom_histogram(aes(fill= species), alpha= 0.5)+\n  scale_fill_manual(name=\" Especies\", values = c(\"darkorange\",\"purple\",\"cyan4\"))+\n  theme_minimal()+\n  labs(x= \"Largo de la aleta (mm)\",\n       y= \" Frecuencia\",\n       title = \" Histograma de aletas\")+\n  facet_grid(~year)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (stat_bin).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}